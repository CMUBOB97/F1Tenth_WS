[35m[1mScanning dependencies of target wall_follow_node[0m
[ 50%] [32mBuilding CXX object CMakeFiles/wall_follow_node.dir/src/wall_follow_node.cpp.o[0m
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_range(float*, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:83:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Krange_data[m[Kâ€™, which is of non-class type â€˜[01m[Kfloat*[m[Kâ€™
   83 |         int index = (range_data.[01;31m[Ksize[m[K() * (angle - angle_min)) / (angle_max - angle_min);
      |                                 [01;31m[K^~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:120:78:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Krange_data[m[Kâ€™, which is of non-class type â€˜[01m[Kfloat*[m[Kâ€™
  120 | ble angle_increment = (angle_max - angle_min) / range_data.[01;31m[Ksize[m[K();
      |                                                            [01;31m[K^~~~[m[K

[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kvoid WallFollow::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::ConstSharedPtr)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:221:49:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kconst _ranges_type[m[Kâ€™ {aka â€˜[01m[Kconst std::vector<float>[m[Kâ€™} to â€˜[01m[Kfloat*[m[Kâ€™
  221 |         double curr_error = get_error([01;31m[Kscan_msg->ranges[m[K, dist, current_velocity);
      |                                       [01;31m[K~~~~~~~~~~^~~~~~[m[K
      |                                                 [01;31m[K|[m[K
      |                                                 [01;31m[Kconst _ranges_type {aka const std::vector<float>}[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:89:29:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™
   89 |     double get_error([01;36m[Kfloat* range_data[m[K, double dist, double velocity)
      |                      [01;36m[K~~~~~~~^~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/wall_follow_node.dir/build.make:63: CMakeFiles/wall_follow_node.dir/src/wall_follow_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/wall_follow_node.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
