-- Found ament_cmake: 0.9.11 (/opt/ros/foxy/share/ament_cmake/cmake)
-- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Override CMake install command with custom implementation using symlinks instead of copying resources
-- Found rclcpp: 2.4.2 (/opt/ros/foxy/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 1.3.0 (/opt/ros/foxy/share/rosidl_adapter/cmake)
-- Found OpenSSL: /usr/lib/x86_64-linux-gnu/libcrypto.so (found version "1.1.1f")  
-- Found FastRTPS: /opt/ros/foxy/include  
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 1.0.3 (/opt/ros/foxy/share/rmw_implementation_cmake/cmake)
-- Using RMW implementation 'rmw_fastrtps_cpp' as default
-- Looking for pthread.h
-- Looking for pthread.h - found
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD
-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
-- Looking for pthread_create in pthreads
-- Looking for pthread_create in pthreads - not found
-- Looking for pthread_create in pthread
-- Looking for pthread_create in pthread - found
-- Found Threads: TRUE  
-- Found rclpy: 1.0.11 (/opt/ros/foxy/share/rclpy/cmake)
-- Found geometry_msgs: 2.0.5 (/opt/ros/foxy/share/geometry_msgs/cmake)
-- Found nav_msgs: 2.0.5 (/opt/ros/foxy/share/nav_msgs/cmake)
-- Found ackermann_msgs: 2.0.2 (/opt/ros/foxy/share/ackermann_msgs/cmake)
-- Found sensor_msgs: 2.0.5 (/opt/ros/foxy/share/sensor_msgs/cmake)
-- Found ament_lint_auto: 0.9.7 (/opt/ros/foxy/share/ament_lint_auto/cmake)
-- Added test 'copyright' to check source files copyright and LICENSE
-- Added test 'cppcheck' to perform static code analysis on C / C++ code
-- Configured cppcheck include dirs: /sim_ws/src/wall_follow/include
-- Configured cppcheck exclude dirs and/or files: 
-- Added test 'cpplint' to check C / C++ code against the Google style
-- Configured cpplint exclude dirs and/or files: 
-- Added test 'flake8' to check Python code syntax and style conventions
-- Added test 'lint_cmake' to check CMake code style
-- Added test 'pep257' to check Python code against some of the style conventions in PEP 257
-- Added test 'uncrustify' to check C / C++ code style
-- Configured uncrustify additional arguments: 
-- Added test 'xmllint' to check XML markup files
-- Configuring done
-- Generating done
-- Build files have been written to: /sim_ws/build/wall_follow
[35m[1mScanning dependencies of target wall_follow_node[0m
[ 50%] [32mBuilding CXX object CMakeFiles/wall_follow_node.dir/src/wall_follow_node.cpp.o[0m
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In constructor â€˜[01m[KWallFollow::WallFollow()[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:30:75:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[K_1[m[Kâ€™ was not declared in this scope; did you mean â€˜[01m[Kstd::placeholders::_1[m[Kâ€™?
   30 |                std::bind(&WallFollow::scan_callback, this, [01;31m[K_1[m[K));
      |                                                            [01;31m[K^~[m[K
      |                                                            [32m[Kstd::placeholders::_1[m[K
In file included from [01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:4[m[K:
[01m[K/usr/include/c++/9/functional:211:34:[m[K [01;36m[Knote: [m[Kâ€˜[01m[Kstd::placeholders::_1[m[Kâ€™ declared here
  211 |     extern const _Placeholder<1> [01;36m[K_1[m[K;
      |                                  [01;36m[K^~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_range(float*, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:81:33:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Krange_data[m[Kâ€™, which is of non-class type â€˜[01m[Kfloat*[m[Kâ€™
   81 |         int index = (range_data.[01;31m[Ksize[m[K() * (angle - angle_min)) / (angle_max - angle_min);
      |                                 [01;31m[K^~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:118:78:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Krange_data[m[Kâ€™, which is of non-class type â€˜[01m[Kfloat*[m[Kâ€™
  118 | ble angle_increment = (angle_max - angle_min) / range_data.[01;31m[Ksize[m[K();
      |                                                            [01;31m[K^~~~[m[K

[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:135:66:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Ka[m[Kâ€™ was not declared in this scope
  135 |         double alpha = atan2(a_valid * cos(theta) - b_valid, [01;31m[Ka[m[K * sin(theta));
      |                                                              [01;31m[K^[m[K

In file included from [01m[K/opt/ros/foxy/include/rclcpp/client.hpp:40[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:23[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
                 from [01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:7[m[K:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kvoid WallFollow::drive_callback(nav_msgs::msg::Odometry_<std::allocator<void> >::ConstSharedPtr)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:199:61:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kspeed[m[Kâ€™ was not declared in this scope
  199 |         RCLCPP_INFO(this->get_logger(), "speed update: %f", [01;31m[Kspeed[m[K);
      |                                                             [01;31m[K^~~~~[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:[m[K In member function â€˜[01m[Kvoid WallFollow::scan_callback(sensor_msgs::msg::LaserScan_<std::allocator<void> >::ConstSharedPtr)[m[Kâ€™:
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:219:49:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kconst _ranges_type[m[Kâ€™ {aka â€˜[01m[Kconst std::vector<float>[m[Kâ€™} to â€˜[01m[Kfloat*[m[Kâ€™
  219 |         double curr_error = get_error([01;31m[Kscan_msg->ranges[m[K, dist, current_velocity);
      |                                       [01;31m[K~~~~~~~~~~^~~~~~[m[K
      |                                                 [01;31m[K|[m[K
      |                                                 [01;31m[Kconst _ranges_type {aka const std::vector<float>}[m[K
[01m[K/sim_ws/src/wall_follow/src/wall_follow_node.cpp:87:29:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kdouble WallFollow::get_error(float*, double, double)[m[Kâ€™
   87 |     double get_error([01;36m[Kfloat* range_data[m[K, double dist, double velocity)
      |                      [01;36m[K~~~~~~~^~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/wall_follow_node.dir/build.make:63: CMakeFiles/wall_follow_node.dir/src/wall_follow_node.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:78: CMakeFiles/wall_follow_node.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
